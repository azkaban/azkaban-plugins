/*
 * Copyright 2012 LinkedIn Corp.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

package azkaban.jobtype.hiveutils;

import java.util.ArrayList;
import java.util.List;

import org.apache.hadoop.hive.metastore.IMetaStoreClient;
import org.apache.hadoop.hive.metastore.api.FieldSchema;

public class RealHiveMetaStoreBrowser implements HiveMetaStoreBrowser
{
  private IMetaStoreClient metaStoreClient;
  
  public RealHiveMetaStoreBrowser(IMetaStoreClient metaStoreClient) 
  {
     this.metaStoreClient = metaStoreClient;
  }

  @Override
  public List<String> getAllDatabases() throws HiveMetaStoreBrowserException
  {
    try
    {
      return metaStoreClient.getAllDatabases();
    }
    catch (Throwable e)
    {
      throw new HiveMetaStoreBrowserException(e);
    }
  }

  @Override
  public List<String> getAllTables(String dbName) throws HiveMetaStoreBrowserException
  {
    try
    {
      return metaStoreClient.getAllTables(dbName);
    }
    catch (Throwable e)
    {
      throw new HiveMetaStoreBrowserException(e);
    }
  }

  @Override
  public List<ResultSchema> getFields(String db, String tableName) throws HiveMetaStoreBrowserException
  {
    try
    {
      List<ResultSchema> result = new ArrayList<ResultSchema>();
      
      List<FieldSchema> fsList = metaStoreClient.getFields(db, tableName);
      if (fsList != null)
      {
        for (FieldSchema fs : fsList) 
        {
          result.add(new ResultSchema(fs.getName(), fs.getType(), fs.getComment()));
        }
      }
      return result;
    }
    catch (Throwable e)
    {
      throw new HiveMetaStoreBrowserException(e);
    }
    
  }

}
